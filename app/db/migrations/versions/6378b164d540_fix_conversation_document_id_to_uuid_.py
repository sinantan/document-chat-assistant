"""Fix conversation document_id to UUID type

Revision ID: 6378b164d540
Revises: 9dc58cbac173
Create Date: 2025-09-20 18:04:55.299258

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = '6378b164d540'
down_revision: Union[str, None] = '9dc58cbac173'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop and recreate table with correct UUID type
    op.execute("DROP TABLE IF EXISTS conversations CASCADE")
    
    # Recreate conversations table with proper UUID type
    op.execute("""
        CREATE TABLE conversations (
            id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            title VARCHAR(500),
            document_id UUID,
            user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,
            metadata TEXT,
            is_active BOOLEAN NOT NULL DEFAULT true,
            is_deleted BOOLEAN NOT NULL DEFAULT false,
            created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
            updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now()
        )
    """)
    
    # Create indexes
    op.execute("CREATE INDEX ix_conversations_document_id ON conversations(document_id)")
    op.execute("CREATE INDEX ix_conversations_user_id ON conversations(user_id)")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('conversations', 'document_id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=255),
               nullable=False)
    # ### end Alembic commands ###
